#pragma once

#include <string>

namespace mhc4
{

namespace tok
{

    enum token_kind : unsigned char
    {
        l_square = '[',
        r_square = ']',
        l_parent = '(',
        r_parent = ')',
        l_brace  = '{',
        r_brace  = '}',
        period   = '.',
        amp      = '&',
        star     = '*',
        plus     = '+',
        minus    = '-',
        tilde    = '~',
        exclaim  = '!',
        slash    = '/',
        percent  = '%',
        less     = '<',
        greater  = '>',
        caret    = '^',
        pipe     = '|',
        question = '?',
        colon    = ':',
        semicolon= ';',
        comma    = ',',
        hash     = '#',
        equal    = '=',
        arrow    = 'a',
        plusplus = 'b',
        minusminus='c',
        lessless = 'd',
        greatergreater='g',
        lessequal = 'h',
        greaterequal='i',
        equalequal='j',
        exclaimequal='k',
        ampamp   = 'l',
        pipepipe = 'm',
        ellipsis = 'n',
        starequal = 'o',
        slashequal = 'p',
        percentequal='q',
        plusequal = 'r',
        minusequal= 's',
        lesslessequal='t',
        greatergreaterequal='u',
        ampequal  = 'v',
        caretequal= 'w',
        pipeequal = 'x',
        hashhash   = 'y',
        lesscolon = 'z',
        colongreater='A',
        lesspercent='B',
        percentgreater='C',
        percentcolon='D',
        percentcolonpercentcolon='E',

        identifier = 'F',
        numeric_constant = 'G',
        char_constant = 'H',
        string_literal = 'I',

        keyword_auto = 'J',
        keyword_break = 'K',
        keyword_case = 'L',
        keyword_char = 'M',
        keyword_const = 'N',
        keyword_continue = 'O',
        keyword_default = 'P',
        keyword_do = 'Q',
        keyword_double = 'R',
        keyword_else = 'S',
        keyword_enum = 'T',
        keyword_extern = 'U',
        keyword_float = 'V',
        keyword_for = 'W',
        keyword_goto = 'X',
        keyword_if = 'Y',
        keyword_inline = 'Z',
        keyword_int = '0',
        keyword_long = '1',
        keyword_register = '2',
        keyword_restrict = '3',
        keyword_return = '4',
        keyword_short = '5',
        keyword_signed = '6',
        keyword_sizeof = '7',
        keyword_static = '8',
        keyword_struct = '9',
        keyword_switch = 0,
        keyword_typedef = 1,
        keyword_union = 2,
        keyword_unsigned = 3,
        keyword_void = 4,
        keyword_volatile = 5,
        keyword_while = 6,
        keyword__Alignas = 7,
        keyword__Alignof = 8,
        keyword__Atomic = 9,
        keyword__Bool = 10,
        keyword__Complex = 11,
        keyword__Generic = 12,
        keyword__Imaginary = 13,
        keyword__Noreturn = 14,
        keyword__Static_assert = 15,
        keyword__Thread_local = 16,

        unknown = 254,
        end_of_file = 255
    };

    token_kind from_string(const std::string& str);
}

}
